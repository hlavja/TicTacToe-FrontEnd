{
  "swagger": "2.0",
  "info": {
    "description": "TicTacToe API documentation",
    "version": "0.0.1",
    "title": "TicTacToe API",
    "contact": {},
    "license": {
      "name": "unlicensed"
    }
  },
  "host": "localhost:8080",
  "basePath": "/api",
  "tags": [
    {
      "name": "account-resource",
      "description": "Account Resource"
    },
    {
      "name": "friend-resource",
      "description": "Friend Resource"
    },
    {
      "name": "game-resource",
      "description": "Game Resource"
    },
    {
      "name": "lobby-resource",
      "description": "Lobby Resource"
    },
    {
      "name": "move-resource",
      "description": "Move Resource"
    },
    {
      "name": "user-jwt-controller",
      "description": "User JWT Controller"
    },
    {
      "name": "user-resource",
      "description": "User Resource"
    }
  ],
  "paths": {
    "/account": {
      "get": {
        "tags": [
          "account-resource"
        ],
        "summary": "getAccount",
        "operationId": "getAccountUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "account-resource"
        ],
        "summary": "saveAccount",
        "operationId": "saveAccountUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "userDTO",
            "description": "userDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/account/change-password": {
      "post": {
        "tags": [
          "account-resource"
        ],
        "summary": "changePassword",
        "operationId": "changePasswordUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "passwordChangeDto",
            "description": "passwordChangeDto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PasswordChangeDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/account/reset-password/finish": {
      "post": {
        "tags": [
          "account-resource"
        ],
        "summary": "finishPasswordReset",
        "operationId": "finishPasswordResetUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "keyAndPassword",
            "description": "keyAndPassword",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KeyAndPasswordVM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/account/reset-password/init": {
      "post": {
        "tags": [
          "account-resource"
        ],
        "summary": "requestPasswordReset",
        "operationId": "requestPasswordResetUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "mail",
            "description": "mail",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/activate": {
      "get": {
        "tags": [
          "account-resource"
        ],
        "summary": "activateAccount",
        "operationId": "activateAccountUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/authenticate": {
      "get": {
        "tags": [
          "account-resource"
        ],
        "summary": "isAuthenticated",
        "operationId": "isAuthenticatedUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "user-jwt-controller"
        ],
        "summary": "authorize",
        "operationId": "authorizeUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "loginVM",
            "description": "loginVM",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginVM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JWTToken"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/friends": {
      "get": {
        "tags": [
          "friend-resource"
        ],
        "summary": "getAllFriends",
        "operationId": "getAllFriendsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FriendDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "friend-resource"
        ],
        "summary": "createFriend",
        "operationId": "createFriendUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "friendDTO",
            "description": "friendDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FriendDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FriendDTO"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "friend-resource"
        ],
        "summary": "updateFriend",
        "operationId": "updateFriendUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "friendDTO",
            "description": "friendDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FriendDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FriendDTO"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/friends/{id}": {
      "get": {
        "tags": [
          "friend-resource"
        ],
        "summary": "getFriend",
        "operationId": "getFriendUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FriendDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "friend-resource"
        ],
        "summary": "deleteFriend",
        "operationId": "deleteFriendUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/games": {
      "get": {
        "tags": [
          "game-resource"
        ],
        "summary": "getAllGames",
        "operationId": "getAllGamesUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GameDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "game-resource"
        ],
        "summary": "createGame",
        "operationId": "createGameUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "gameDTO",
            "description": "gameDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GameDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GameDTO"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "game-resource"
        ],
        "summary": "updateGame",
        "operationId": "updateGameUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "gameDTO",
            "description": "gameDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GameDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GameDTO"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/games/{id}": {
      "get": {
        "tags": [
          "game-resource"
        ],
        "summary": "getGame",
        "operationId": "getGameUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GameDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "game-resource"
        ],
        "summary": "deleteGame",
        "operationId": "deleteGameUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/get-players": {
      "get": {
        "tags": [
          "lobby-resource"
        ],
        "summary": "getOnlineUsers",
        "operationId": "getOnlineUsersUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PlayerDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/moves": {
      "get": {
        "tags": [
          "move-resource"
        ],
        "summary": "getAllMoves",
        "operationId": "getAllMovesUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MoveDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "move-resource"
        ],
        "summary": "createMove",
        "operationId": "createMoveUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "moveDTO",
            "description": "moveDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MoveDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MoveDTO"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "move-resource"
        ],
        "summary": "updateMove",
        "operationId": "updateMoveUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "moveDTO",
            "description": "moveDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MoveDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MoveDTO"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/moves/{id}": {
      "get": {
        "tags": [
          "move-resource"
        ],
        "summary": "getMove",
        "operationId": "getMoveUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MoveDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "move-resource"
        ],
        "summary": "deleteMove",
        "operationId": "deleteMoveUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/register": {
      "post": {
        "tags": [
          "account-resource"
        ],
        "summary": "registerAccount",
        "operationId": "registerAccountUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "managedUserVM",
            "description": "managedUserVM",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagedUserVM"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/users": {
      "get": {
        "tags": [
          "user-resource"
        ],
        "summary": "getAllUsers",
        "operationId": "getAllUsersUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number of the requested page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of a page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "user-resource"
        ],
        "summary": "createUser",
        "operationId": "createUserUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "userDTO",
            "description": "userDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "user-resource"
        ],
        "summary": "updateUser",
        "operationId": "updateUserUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "userDTO",
            "description": "userDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserDTO"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/users/authorities": {
      "get": {
        "tags": [
          "user-resource"
        ],
        "summary": "getAuthorities",
        "operationId": "getAuthoritiesUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/users/{login}": {
      "get": {
        "tags": [
          "user-resource"
        ],
        "summary": "getUser",
        "operationId": "getUserUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "login",
            "in": "path",
            "description": "login",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "user-resource"
        ],
        "summary": "deleteUser",
        "operationId": "deleteUserUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "login",
            "in": "path",
            "description": "login",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "FriendDTO": {
      "type": "object",
      "properties": {
        "friendWithId": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "userId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "FriendDTO",
      "description": "The Friend entity.\n@author hlavja"
    },
    "GameDTO": {
      "type": "object",
      "properties": {
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "firstPlayerId": {
          "type": "integer",
          "format": "int64"
        },
        "gameStatus": {
          "type": "string"
        },
        "gameType": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "result": {
          "type": "string"
        },
        "secondPlayerId": {
          "type": "integer",
          "format": "int64"
        },
        "winningPlayerId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "GameDTO",
      "description": "The Game entity.\n@author hlavja"
    },
    "JWTToken": {
      "type": "object",
      "properties": {
        "id_token": {
          "type": "string"
        }
      },
      "title": "JWTToken"
    },
    "KeyAndPasswordVM": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        }
      },
      "title": "KeyAndPasswordVM"
    },
    "LoginVM": {
      "type": "object",
      "required": [
        "password",
        "username"
      ],
      "properties": {
        "password": {
          "type": "string",
          "minLength": 4,
          "maxLength": 100
        },
        "rememberMe": {
          "type": "boolean"
        },
        "username": {
          "type": "string",
          "minLength": 1,
          "maxLength": 50
        }
      },
      "title": "LoginVM"
    },
    "ManagedUserVM": {
      "type": "object",
      "properties": {
        "activated": {
          "type": "boolean"
        },
        "authorities": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "createdBy": {
          "type": "string"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "email": {
          "type": "string",
          "minLength": 5,
          "maxLength": 254
        },
        "firstName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "imageUrl": {
          "type": "string",
          "minLength": 0,
          "maxLength": 256
        },
        "langKey": {
          "type": "string",
          "minLength": 2,
          "maxLength": 10
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "login": {
          "type": "string",
          "minLength": 1,
          "maxLength": 50,
          "pattern": ""
        },
        "password": {
          "type": "string",
          "minLength": 4,
          "maxLength": 100
        }
      },
      "title": "ManagedUserVM"
    },
    "MoveDTO": {
      "type": "object",
      "properties": {
        "boardX": {
          "type": "integer",
          "format": "int32"
        },
        "boardY": {
          "type": "integer",
          "format": "int32"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "gameId": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "playerId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "MoveDTO",
      "description": "The Move entity.\n@author hlavja"
    },
    "PasswordChangeDTO": {
      "type": "object",
      "properties": {
        "currentPassword": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        }
      },
      "title": "PasswordChangeDTO"
    },
    "PlayerDTO": {
      "type": "object",
      "properties": {
        "available": {
          "type": "boolean"
        },
        "friend": {
          "type": "boolean"
        },
        "login": {
          "type": "string"
        },
        "online": {
          "type": "boolean"
        }
      },
      "title": "PlayerDTO"
    },
    "User": {
      "type": "object",
      "required": [
        "activated",
        "login"
      ],
      "properties": {
        "activated": {
          "type": "boolean"
        },
        "email": {
          "type": "string",
          "minLength": 5,
          "maxLength": 254
        },
        "firstName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "imageUrl": {
          "type": "string",
          "minLength": 0,
          "maxLength": 256
        },
        "langKey": {
          "type": "string",
          "minLength": 2,
          "maxLength": 10
        },
        "lastName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "login": {
          "type": "string",
          "minLength": 1,
          "maxLength": 50,
          "pattern": ""
        },
        "resetDate": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "User"
    },
    "UserDTO": {
      "type": "object",
      "properties": {
        "activated": {
          "type": "boolean"
        },
        "authorities": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "createdBy": {
          "type": "string"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "email": {
          "type": "string",
          "minLength": 5,
          "maxLength": 254
        },
        "firstName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "imageUrl": {
          "type": "string",
          "minLength": 0,
          "maxLength": 256
        },
        "langKey": {
          "type": "string",
          "minLength": 2,
          "maxLength": 10
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "login": {
          "type": "string",
          "minLength": 1,
          "maxLength": 50,
          "pattern": ""
        }
      },
      "title": "UserDTO"
    }
  }
}